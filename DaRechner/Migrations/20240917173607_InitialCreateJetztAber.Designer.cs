// <auto-generated />
using System;
using LAPTemplateMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAPTemplateMVC.Migrations
{
    [DbContext(typeof(FinanzRechnerContext))]
    [Migration("20240917173607_InitialCreateJetztAber")]
    partial class InitialCreateJetztAber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LAPTemplateMVC.Models.dboSchema.Ausgabe", b =>
                {
                    b.Property<long>("Ausgabeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("AUSGABEID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Ausgabeid"));

                    b.Property<decimal>("Betrag")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("BETRAG");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BEZEICHNUNG");

                    b.Property<DateTime>("CrTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("CR_TIMESTAMP");

                    b.Property<string>("CrUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CR_USER");

                    b.Property<long>("Kategorieid")
                        .HasColumnType("bigint")
                        .HasColumnName("KATEGORIEID");

                    b.Property<DateTime>("ModTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("MOD_TIMESTAMP");

                    b.Property<string>("ModUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("MOD_USER");

                    b.Property<short>("Valid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1)
                        .HasColumnName("VALID");

                    b.HasKey("Ausgabeid");

                    b.HasIndex("Kategorieid");

                    b.HasIndex(new[] { "Valid" }, "IX_AUSGABE_VALID")
                        .IsDescending();

                    b.ToTable("AUSGABE", null, t =>
                        {
                            t.HasTrigger("TRG_AD_AUSGABE");

                            t.HasTrigger("TRG_AI_AUSGABE");

                            t.HasTrigger("TRG_AU_AUSGABE");

                            t.HasTrigger("TRG_BD_AUSGABE");

                            t.HasTrigger("TRG_BI_AUSGABE");

                            t.HasTrigger("TRG_BU_AUSGABE");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LAPTemplateMVC.Models.dboSchema.Einnahme", b =>
                {
                    b.Property<long>("Einnahmeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("EINNAHMEID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Einnahmeid"));

                    b.Property<decimal>("Betrag")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("BETRAG");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BEZEICHNUNG");

                    b.Property<DateTime>("CrTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("CR_TIMESTAMP");

                    b.Property<string>("CrUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CR_USER");

                    b.Property<long>("Kategorieid")
                        .HasColumnType("bigint")
                        .HasColumnName("KATEGORIEID");

                    b.Property<DateTime>("ModTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("MOD_TIMESTAMP");

                    b.Property<string>("ModUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("MOD_USER");

                    b.Property<short>("Valid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1)
                        .HasColumnName("VALID");

                    b.HasKey("Einnahmeid");

                    b.HasIndex("Kategorieid");

                    b.HasIndex(new[] { "Valid" }, "IX_EINNAHME_VALID")
                        .IsDescending();

                    b.ToTable("EINNAHME", null, t =>
                        {
                            t.HasTrigger("TRG_AD_EINNAHME");

                            t.HasTrigger("TRG_AI_EINNAHME");

                            t.HasTrigger("TRG_AU_EINNAHME");

                            t.HasTrigger("TRG_BD_EINNAHME");

                            t.HasTrigger("TRG_BI_EINNAHME");

                            t.HasTrigger("TRG_BU_EINNAHME");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LAPTemplateMVC.Models.dboSchema.Kategorie", b =>
                {
                    b.Property<long>("Kategorieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("KATEGORIEID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Kategorieid"));

                    b.Property<DateTime>("CrTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("CR_TIMESTAMP");

                    b.Property<string>("CrUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CR_USER");

                    b.Property<string>("Farbe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FARBE");

                    b.Property<DateTime>("ModTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("MOD_TIMESTAMP");

                    b.Property<string>("ModUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("MOD_USER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<short>("Valid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1)
                        .HasColumnName("VALID");

                    b.HasKey("Kategorieid");

                    b.HasIndex(new[] { "Valid" }, "IX_KATEGORIE_VALID")
                        .IsDescending();

                    b.ToTable("KATEGORIE", null, t =>
                        {
                            t.HasTrigger("TRG_AD_KATEGORIE");

                            t.HasTrigger("TRG_AI_KATEGORIE");

                            t.HasTrigger("TRG_AU_KATEGORIE");

                            t.HasTrigger("TRG_BD_KATEGORIE");

                            t.HasTrigger("TRG_BI_KATEGORIE");

                            t.HasTrigger("TRG_BU_KATEGORIE");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LAPTemplateMVC.Models.dboSchema.Ausgabe", b =>
                {
                    b.HasOne("LAPTemplateMVC.Models.dboSchema.Kategorie", "Kategorie")
                        .WithMany("Ausgabe")
                        .HasForeignKey("Kategorieid")
                        .IsRequired()
                        .HasConstraintName("FK_AUSGABE_KATEGORIE");

                    b.Navigation("Kategorie");
                });

            modelBuilder.Entity("LAPTemplateMVC.Models.dboSchema.Einnahme", b =>
                {
                    b.HasOne("LAPTemplateMVC.Models.dboSchema.Kategorie", "Kategorie")
                        .WithMany("Einnahme")
                        .HasForeignKey("Kategorieid")
                        .IsRequired()
                        .HasConstraintName("FK_EINNAHME_KATEGORIE");

                    b.Navigation("Kategorie");
                });

            modelBuilder.Entity("LAPTemplateMVC.Models.dboSchema.Kategorie", b =>
                {
                    b.Navigation("Ausgabe");

                    b.Navigation("Einnahme");
                });
#pragma warning restore 612, 618
        }
    }
}
